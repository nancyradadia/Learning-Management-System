# Generated by Django 3.0.6 on 2021-04-12 12:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('f_id', models.CharField(max_length=10)),
                ('email_id', models.EmailField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Faculty Information',
            },
        ),
        migrations.CreateModel(
            name='Faculty_Assignment',
            fields=[
                ('assign_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_id', models.CharField(max_length=50)),
                ('faculty_id', models.CharField(max_length=50)),
                ('PDF', models.CharField(max_length=50)),
                ('marks', models.IntegerField()),
                ('deadline', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resource_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_id', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
                ('faculty_id', models.CharField(max_length=50)),
                ('resource_material', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('s_id', models.CharField(max_length=10)),
                ('email_id', models.EmailField(max_length=50, primary_key=True, serialize=False)),
                ('admission_year', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Student Information',
            },
        ),
        migrations.CreateModel(
            name='Student_Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_id', models.CharField(max_length=10)),
                ('course_id', models.CharField(max_length=50)),
                ('student_id', models.CharField(max_length=50)),
                ('PDF', models.CharField(max_length=50)),
                ('time_of_submission', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Student_Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_id', models.CharField(max_length=10)),
                ('course_id', models.CharField(max_length=50)),
                ('student_id', models.CharField(max_length=50)),
                ('comments', models.CharField(max_length=200)),
                ('marks', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(max_length=50)),
                ('course_enrollment_year', models.DateField(default=django.utils.timezone.now)),
                ('email', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Faculty Course Information',
                'unique_together': {('course_id', 'email', 'course_enrollment_year')},
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=50)),
                ('course_details', models.CharField(max_length=500)),
                ('course_credits', models.FloatField()),
                ('professor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.Faculty')),
            ],
            options={
                'verbose_name_plural': 'Course Information',
                'unique_together': {('course_id', 'professor_id', 'course_name')},
            },
        ),
        migrations.CreateModel(
            name='Student_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_enrollment_year', models.DateField(default=django.utils.timezone.now)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.Course')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.Student')),
            ],
            options={
                'verbose_name_plural': 'Student Course Information',
                'unique_together': {('course_id', 'email', 'course_enrollment_year')},
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('identification', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('designation', models.CharField(choices=[('student', 'STUDENT'), ('faculty', 'FACULTY')], default='student', max_length=7)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('email', 'identification', 'designation')},
            },
        ),
    ]
