.transition,
p,
ul li i:before,
ul li i:after {
    transition: all 0.25s ease-in-out;
}

.flipIn,
h1,
ul li {
    animation: flipdown 0.5s ease both;
}

.no-select,
h2 {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@media (max-width: 550px) {
    body {
        box-sizing: border-box;
        transform: translate(0, 0);
        width: 100vw !important;
        min-height: 100%;
        margin: 0;
        left: 0;
    }
}

* {
    box-sizing: border-box;
}

.row:after {
    content: "";
    display: table;
    clear: both;
}

.right {
    float: left;
    width: 100%;
    padding: 10px;
    height: calc(100vh - 50px);
    overflow: scroll;
}

 ::-webkit-scrollbar {
    width: 0px;
    background: transparent;
    /* make scrollbar transparent */
}

.center {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    font-family: 'Nanum Gothic Coding', monospace;
    font-weight: bold;
}


/* Responsive layout - makes the two columns stack on top of each other instead of next to each other */

@media screen and (max-width: 600px) {
    .left {
        width: 100%;
    }
    .right {
        width: 100%;
    }
    .navbar {
        background-image: linear-gradient(to left, #ffffff 80.5%, #ffffff 19.5%);
    }
    .navbar-nav {
        background-color: white;
    }
}

.center {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    font-family: 'Nanum Gothic Coding', monospace;
    color: white;
    font-weight: bold;
    font-size: 250%;
}

h1,
h2 {
    color: black;
}

h1 {
    text-transform: uppercase;
    font-size: 36px;
    line-height: 42px;
    letter-spacing: 3px;
    font-weight: 100;
}

h2 {
    font-size: 26px;
    line-height: 34px;
    font-weight: 300;
    letter-spacing: 1px;
    display: block;
    background-color: white;
    margin: 0;
    cursor: pointer;
}

p {
    color: rgba(48, 69, 92, 0.8);
    font-size: 17px;
    line-height: 26px;
    letter-spacing: 1px;
    position: relative;
    overflow: hidden;
    max-height: 800px;
    opacity: 1;
    transform: translate(0, 0);
    margin-top: 14px;
    z-index: 2;
}

mark {
    background-color: white;
    color: black;
}

.right ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.right ul li {
    position: relative;
    padding: 0;
    margin: 0;
    padding-bottom: 4px;
    padding-top: 18px;
    border-top: 1px dotted black;
}

.right ul li:nth-of-type(1) {
    animation-delay: 0.5s;
}

.right ul li:nth-of-type(2) {
    animation-delay: 0.75s;
}

.right ul li:nth-of-type(3) {
    animation-delay: 1.0s;
}

.right ul li:last-of-type {
    padding-bottom: 0;
}

.right ul li i {
    position: absolute;
    transform: translate(-6px, 0);
    margin-top: 16px;
    right: 0;
}

.right ul li i:before,
ul li i:after {
    content: "";
    position: absolute;
    background-color: black;
    width: 3px;
    height: 9px;
}

.right ul li i:before {
    transform: translate(-2px, 0) rotate(45deg);
}

.right ul li i:after {
    transform: translate(2px, 0) rotate(-45deg);
}

.right ul li input[type=checkbox] {
    position: absolute;
    cursor: pointer;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: 0;
}

.right ul li input[type=checkbox]:checked~p {
    margin-top: 0;
    max-height: 0;
    opacity: 0;
    transform: translate(0, 50%);
}

.right ul li input[type=checkbox]:checked~i:before {
    transform: translate(2px, 0) rotate(45deg);
}

.right ul li input[type=checkbox]:checked~i:after {
    transform: translate(-2px, 0) rotate(-45deg);
}

@keyframes flipdown {
    0% {
        opacity: 0;
        transform-origin: top center;
        transform: rotateX(-90deg);
    }
    5% {
        opacity: 1;
    }
    80% {
        transform: rotateX(8deg);
    }
    83% {
        transform: rotateX(6deg);
    }
    92% {
        transform: rotateX(-3deg);
    }
    100% {
        transform-origin: top center;
        transform: rotateX(0deg);
    }
}

* {
    margin: 0px;
    padding: 0px;
    font-family: Helvetica, Arial, sans-serif;
}


/* Full-width input fields */

input[type=text] {
    width: 90%;
    padding: 12px 20px;
    margin: 8px 26px;
    display: inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
    font-size: 16px;
}

input[type=number] {
    width: 90%;
    padding: 12px 20px;
    margin: 8px 26px;
    display: inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
    font-size: 16px;
}

input[type=datetime-local] {
    width: 90%;
    padding: 12px 20px;
    margin: 8px 26px;
    display: inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
    font-size: 16px;
}

input[type=file] {
    width: 90%;
    padding: 12px 20px;
    margin: 8px 26px;
    display: inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
    font-size: 16px;
}


/* Set a style for all buttons */

button {
    background-color: #4CAF50;
    color: white;
    padding: 14px 20px;
    margin: 8px 26px;
    border: none;
    cursor: pointer;
    width: 90%;
    font-size: 20px;
}

button:hover {
    opacity: 0.8;
}


/* Center the image and position the close button */

.imgcontainer {
    text-align: center;
    margin: 24px 0 12px 0;
    position: relative;
}

.avatar {
    width: 200px;
    height: 200px;
    border-radius: 50%;
}


/* The Modal (background) */

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
}


/* Modal Content Box */

.modal-content {
    background-color: #fefefe;
    margin: 4% auto 15% auto;
    border: 1px solid #888;
    width: 40%;
    padding-bottom: 30px;
}


/* The Close Button (x) */

.close {
    position: absolute;
    right: 25px;
    top: 0;
    color: #000;
    font-size: 35px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: red;
    cursor: pointer;
}


/* Add Zoom Animation */

.animate {
    animation: zoom 0.6s
}

@keyframes zoom {
    from {
        transform: scale(0)
    }
    to {
        transform: scale(1)
    }
}